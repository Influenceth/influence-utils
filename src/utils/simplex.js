import * as math from 'mathjs';

const multiply = (a, b) => {
  if (!Array.isArray(a) || !Array.isArray(b)) return math.multiply(a, b);
  return a.map((v, i) => v * b[i]);
};

const floor = (a) => {
  return a.map(v => Math.floor(v));
};

const step = (a, b) => {
  return a.map((v, i) => b[i] <= v ? 0 : 1);
};

const mod289 = (x) => {
  return x.map(v => v - Math.floor(v * (1.0 / 289.0)) * 289.0);
};

const permute = (x) => {
  x = x.map(v => ((v * 34.0) + 1.0) * v);
  return mod289(x);
};

const taylorInvSqrt = (r) => {
  return r.map(v => 1.79284291400159 - 0.85373472095314 * v);
};

export const snoise = (v) => {
  const C = [1.0 / 6.0, 1.0 / 3.0];
  const D = [0.0, 0.5, 1.0, 2.0];

  // First corner
  const i = floor(math.add(v, math.dot(v, [C[1], C[1], C[1]])));
  const x0 = math.add(math.subtract(v, i), math.dot(i, [C[0], C[0], C[0]]));

  // Other corners
  const g = step([x0[1], x0[2], x0[0]], [x0[0], x0[1], x0[2]]);
  const l = math.subtract(1.0, g);
  const i1 = math.min([[g[0], g[1], g[2]], [l[2], l[0], l[1]]], 0);
  const i2 = math.max([[g[0], g[1], g[2]], [l[2], l[0], l[1]]], 0);

  //   x0 = x0 - 0.0 + 0.0 * C.xxx;
  //   x1 = x0 - i1  + 1.0 * C.xxx;
  //   x2 = x0 - i2  + 2.0 * C.xxx;
  //   x3 = x0 - 1.0 + 3.0 * C.xxx;
  const x1 = math.add(math.subtract(x0, i1), [C[0], C[0], C[0]]);
  const x2 = math.add(math.subtract(x0, i2), [C[1], C[1], C[1]]); // 2.0*C.x = 1/3 = C.y
  const x3 = math.subtract(x0, [D[1], D[1], D[1]]); // -1.0+3.0*C.x = -0.5 = -D.y

  // Permutations
  let p1 = permute(math.add(i[2], [0.0, i1[2], i2[2], 1.0]));
  let p2 = permute(math.add(math.add(p1, i[1]), [0.0, i1[1], i2[1], 1.0]));
  const p = permute(math.add(math.add(p2, i[0]), [0.0, i1[0], i2[0], 1.0]));

  // Gradients: 7x7 points over a square, mapped onto an octahedron.
  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)
  const ns = [0.285714285714286, -0.928571428571428, 0.142857142857143]; // these must be *exact*
  const j = math.subtract(p, multiply(49, floor(multiply(p, ns[2] * ns[2])))); //  mod(p,7*7)

  const x_ = floor(multiply(j, ns[2]));
  const y_ = floor(math.subtract(j, multiply(7, x_))); // mod(j,N)

  const x = math.add(multiply(x_, ns[0]), [ns[1], ns[1], ns[1], ns[1]]);
  const y = math.add(multiply(y_, ns[0]), [ns[1], ns[1], ns[1], ns[1]]);
  const h = math.subtract(math.subtract(1.0, math.abs(x)), math.abs(y));

  const b0 = [x[0], x[1], y[0], y[1]];
  const b1 = [x[2], x[3], y[2], y[3]];
  // vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;
  // vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;
  const s0 = math.add(multiply(floor(b0), 2.0), 1.0);
  const s1 = math.add(multiply(floor(b1), 2.0), 1.0);
  const sh = multiply(-1, step(h, [0, 0, 0, 0]));

  const a0 = math.add([b0[0], b0[2], b0[1], b0[3]], multiply([s0[0], s0[2], s0[1], s0[3]], [sh[0], sh[0], sh[1], sh[1]]));
  const a1 = math.add([b1[0], b1[2], b1[1], b1[3]], multiply([s1[0], s1[2], s1[1], s1[3]], [sh[2], sh[2], sh[3], sh[3]]));

  let p0 = [a0[0], a0[1], h[0]];
  p1 = [a0[2], a0[3], h[1]];
  p2 = [a1[0], a1[1], h[2]];
  let p3 = [a1[2], a1[3], h[3]];

  // Normalise gradients
  const norm = taylorInvSqrt([math.dot(p0, p0), math.dot(p1, p1), math.dot(p2, p2), math.dot(p3, p3)]);
  p0 = multiply(p0, norm[0]);
  p1 = multiply(p1, norm[1]);
  p2 = multiply(p2, norm[2]);
  p3 = multiply(p3, norm[3]);

  // Mix final noise value
  let m = math.max([math.subtract(0.5, [math.dot(x0, x0), math.dot(x1, x1), math.dot(x2, x2), math.dot(x3, x3)]), [0, 0, 0, 0]], 0);
  m = multiply(m, m);
  m = multiply(m, m);
  const noise = multiply(105.0, math.dot(m, [math.dot(p0, x0), math.dot(p1, x1), math.dot(p2, x2), math.dot(p3, x3)]));
  return noise;
};

export const recursiveSNoise = (p, pers, octaves) => {
  let total = 0.0;
  let frequency = 1.0;
  let amplitude = 1.0;
  let maxValue = 0.0;

  for (let i = 0; i < octaves; i++) {
    total += snoise(multiply(p, frequency)) * amplitude;
    maxValue += amplitude;
    amplitude *= pers;
    frequency *= 2.0;
  }

  const noise = total / maxValue;
  return noise;
};

const SIMPLEX_OCTAVES = {
  2: [
    [ 848946201n, 0n, 573229616n, 848946201n ],
    [ 968908012n, 42949673n, 848946201n, 968908012n ],
    [ 1051323919n, 85899346n, 968908012n, 1051323919n ],
    [ 1118070985n, 128849019n, 1051323919n, 1118070985n ],
    [ 1175636393n, 171798692n, 1118070985n, 1175636393n ],
    [ 1225770992n, 214748365n, 1175636393n, 1225770992n ],
    [ 1271912851n, 257698038n, 1225770992n, 1271912851n ],
    [ 1313849605n, 300647711n, 1271912851n, 1313849605n ],
    [ 1352768668n, 343597384n, 1313849605n, 1352768668n ],
    [ 1388845262n, 386547057n, 1352768668n, 1388845262n ],
    [ 1422491308n, 429496730n, 1388845262n, 1422491308n ],
    [ 1454091450n, 472446403n, 1422491308n, 1454091450n ],
    [ 1483916412n, 515396076n, 1454091450n, 1483916412n ],
    [ 1512394034n, 558345748n, 1483916412n, 1512394034n ],
    [ 1539301568n, 601295421n, 1512394034n, 1539301568n ],
    [ 1564762205n, 644245094n, 1539301568n, 1564762205n ],
    [ 1589850542n, 687194767n, 1564762205n, 1589850542n ],
    [ 1613525399n, 730144440n, 1589850542n, 1613525399n ],
    [ 1636539464n, 773094113n, 1613525399n, 1636539464n ],
    [ 1658075781n, 816043786n, 1636539464n, 1658075781n ],
    [ 1679064731n, 858993459n, 1658075781n, 1679064731n ],
    [ 1699927333n, 901943132n, 1679064731n, 1699927333n ],
    [ 1720007568n, 944892805n, 1699927333n, 1720007568n ],
    [ 1739820779n, 987842478n, 1720007568n, 1739820779n ],
    [ 1758707550n, 1030792151n, 1739820779n, 1758707550n ],
    [ 1776759452n, 1073741824n, 1758707550n, 1776759452n ],
    [ 1794498777n, 1116691497n, 1776759452n, 1794498777n ],
    [ 1811935497n, 1159641170n, 1794498777n, 1811935497n ],
    [ 1829058542n, 1202590843n, 1811935497n, 1829058542n ],
    [ 1845876957n, 1245540516n, 1829058542n, 1845876957n ],
    [ 1862579281n, 1288490189n, 1845876957n, 1862579281n ],
    [ 1878797337n, 1331439862n, 1862579281n, 1878797337n ],
    [ 1895077414n, 1374389535n, 1878797337n, 1895077414n ],
    [ 1910893965n, 1417339208n, 1895077414n, 1910893965n ],
    [ 1926557796n, 1460288881n, 1910893965n, 1926557796n ],
    [ 1942056614n, 1503238554n, 1926557796n, 1942056614n ],
    [ 1957067944n, 1546188227n, 1942056614n, 1957067944n ],
    [ 1972258853n, 1589137900n, 1957067944n, 1972258853n ],
    [ 1987222735n, 1632087572n, 1972258853n, 1987222735n ],
    [ 2002264257n, 1675037245n, 1987222735n, 2002264257n ],
    [ 2017172007n, 1717986918n, 2002264257n, 2017172007n ],
    [ 2032094810n, 1760936591n, 2017172007n, 2032094810n ],
    [ 2046695632n, 1803886264n, 2032094810n, 2046695632n ],
    [ 2061488353n, 1846835937n, 2046695632n, 2061488353n ],
    [ 2076088588n, 1889785610n, 2061488353n, 2076088588n ],
    [ 2090616875n, 1932735283n, 2076088588n, 2090616875n ],
    [ 2104944337n, 1975684956n, 2090616875n, 2104944337n ],
    [ 2119218642n, 2018634629n, 2104944337n, 2119218642n ],
    [ 2133640950n, 2061584302n, 2119218642n, 2133640950n ],
    [ 2147483648n, 2104533975n, 2133640950n, 2147483648n ]
  ],
  3: [
    [ 1003729318n, 0n, 746972896n, 1003729318n ],
    [ 1112967622n, 42949673n, 1003729318n, 1112967622n ],
    [ 1188221964n, 85899346n, 1112967622n, 1188221964n ],
    [ 1247298913n, 128849019n, 1188221964n, 1247298913n ],
    [ 1297888369n, 171798692n, 1247298913n, 1297888369n ],
    [ 1341616824n, 214748365n, 1297888369n, 1341616824n ],
    [ 1381434740n, 257698038n, 1341616824n, 1381434740n ],
    [ 1417202381n, 300647711n, 1381434740n, 1417202381n ],
    [ 1450687184n, 343597384n, 1417202381n, 1450687184n ],
    [ 1482185195n, 386547057n, 1450687184n, 1482185195n ],
    [ 1511073427n, 429496730n, 1482185195n, 1511073427n ],
    [ 1538387041n, 472446403n, 1511073427n, 1538387041n ],
    [ 1563881308n, 515396076n, 1538387041n, 1563881308n ],
    [ 1588822139n, 558345748n, 1563881308n, 1588822139n ],
    [ 1612336621n, 601295421n, 1588822139n, 1612336621n ],
    [ 1634991794n, 644245094n, 1612336621n, 1634991794n ],
    [ 1656797242n, 687194767n, 1634991794n, 1656797242n ],
    [ 1677196154n, 730144440n, 1656797242n, 1677196154n ],
    [ 1696924085n, 773094113n, 1677196154n, 1696924085n ],
    [ 1716320883n, 816043786n, 1696924085n, 1716320883n ],
    [ 1734677560n, 858993459n, 1716320883n, 1734677560n ],
    [ 1752779649n, 901943132n, 1734677560n, 1752779649n ],
    [ 1770333812n, 944892805n, 1752779649n, 1770333812n ],
    [ 1787379866n, 987842478n, 1770333812n, 1787379866n ],
    [ 1803876932n, 1030792151n, 1787379866n, 1803876932n ],
    [ 1819974870n, 1073741824n, 1803876932n, 1819974870n ],
    [ 1835925287n, 1116691497n, 1819974870n, 1835925287n ],
    [ 1851512849n, 1159641170n, 1835925287n, 1851512849n ],
    [ 1866356930n, 1202590843n, 1851512849n, 1866356930n ],
    [ 1881291798n, 1245540516n, 1866356930n, 1881291798n ],
    [ 1895843475n, 1288490189n, 1881291798n, 1895843475n ],
    [ 1910243034n, 1331439862n, 1895843475n, 1910243034n ],
    [ 1924341009n, 1374389535n, 1910243034n, 1924341009n ],
    [ 1938403936n, 1417339208n, 1924341009n, 1938403936n ],
    [ 1952161963n, 1460288881n, 1938403936n, 1952161963n ],
    [ 1965938956n, 1503238554n, 1952161963n, 1965938956n ],
    [ 1979615213n, 1546188227n, 1965938956n, 1979615213n ],
    [ 1993060934n, 1589137900n, 1979615213n, 1993060934n ],
    [ 2006204071n, 1632087572n, 1993060934n, 2006204071n ],
    [ 2019293607n, 1675037245n, 2006204071n, 2019293607n ],
    [ 2032417417n, 1717986918n, 2019293607n, 2032417417n ],
    [ 2045347680n, 1760936591n, 2032417417n, 2045347680n ],
    [ 2058235220n, 1803886264n, 2045347680n, 2058235220n ],
    [ 2071063775n, 1846835937n, 2058235220n, 2071063775n ],
    [ 2083946846n, 1889785610n, 2071063775n, 2083946846n ],
    [ 2096839726n, 1932735283n, 2083946846n, 2096839726n ],
    [ 2109376552n, 1975684956n, 2096839726n, 2109376552n ],
    [ 2122074850n, 2018634629n, 2109376552n, 2122074850n ],
    [ 2134816656n, 2061584302n, 2122074850n, 2134816656n ],
    [ 2147483648n, 2104533975n, 2134816656n, 2147483648n ],
  ],
  4: [
    [ 1072880515n, 0n, 830969936n, 1072880515n ],
    [ 1176578584n, 42949673n, 1072880515n, 1176578584n ],
    [ 1247816935n, 85899346n, 1176578584n, 1247816935n ],
    [ 1303427501n, 128849019n, 1247816935n, 1303427501n ],
    [ 1352401573n, 171798692n, 1303427501n, 1352401573n ],
    [ 1393731685n, 214748365n, 1352401573n, 1393731685n ],
    [ 1430898545n, 257698038n, 1393731685n, 1430898545n ],
    [ 1465090509n, 300647711n, 1430898545n, 1465090509n ],
    [ 1495717195n, 343597384n, 1465090509n, 1495717195n ],
    [ 1524580290n, 386547057n, 1495717195n, 1524580290n ],
    [ 1551576897n, 429496730n, 1524580290n, 1551576897n ],
    [ 1577269574n, 472446403n, 1551576897n, 1577269574n ],
    [ 1601996252n, 515396076n, 1577269574n, 1601996252n ],
    [ 1624930782n, 558345748n, 1601996252n, 1624930782n ],
    [ 1646621521n, 601295421n, 1624930782n, 1646621521n ],
    [ 1667624628n, 644245094n, 1646621521n, 1667624628n ],
    [ 1687925911n, 687194767n, 1667624628n, 1687925911n ],
    [ 1707272059n, 730144440n, 1687925911n, 1707272059n ],
    [ 1725836186n, 773094113n, 1707272059n, 1725836186n ],
    [ 1743381270n, 816043786n, 1725836186n, 1743381270n ],
    [ 1760397041n, 858993459n, 1743381270n, 1760397041n ],
    [ 1777224450n, 901943132n, 1760397041n, 1777224450n ],
    [ 1793469523n, 944892805n, 1777224450n, 1793469523n ],
    [ 1809540913n, 987842478n, 1793469523n, 1809540913n ],
    [ 1825156690n, 1030792151n, 1809540913n, 1825156690n ],
    [ 1840041898n, 1073741824n, 1825156690n, 1840041898n ],
    [ 1854745873n, 1116691497n, 1840041898n, 1854745873n ],
    [ 1869484130n, 1159641170n, 1854745873n, 1869484130n ],
    [ 1883686342n, 1202590843n, 1869484130n, 1883686342n ],
    [ 1897566634n, 1245540516n, 1883686342n, 1897566634n ],
    [ 1911322911n, 1288490189n, 1897566634n, 1911322911n ],
    [ 1925062204n, 1331439862n, 1911322911n, 1925062204n ],
    [ 1938401984n, 1374389535n, 1925062204n, 1938401984n ],
    [ 1951619058n, 1417339208n, 1938401984n, 1951619058n ],
    [ 1964636207n, 1460288881n, 1951619058n, 1964636207n ],
    [ 1977618785n, 1503238554n, 1964636207n, 1977618785n ],
    [ 1990157321n, 1546188227n, 1977618785n, 1990157321n ],
    [ 2002613111n, 1589137900n, 1990157321n, 2002613111n ],
    [ 2015276992n, 1632087572n, 2002613111n, 2015276992n ],
    [ 2027866361n, 1675037245n, 2015276992n, 2027866361n ],
    [ 2040348549n, 1717986918n, 2027866361n, 2040348549n ],
    [ 2052443905n, 1760936591n, 2040348549n, 2052443905n ],
    [ 2064592967n, 1803886264n, 2052443905n, 2064592967n ],
    [ 2076637786n, 1846835937n, 2064592967n, 2076637786n ],
    [ 2088826863n, 1889785610n, 2076637786n, 2088826863n ],
    [ 2100928778n, 1932735283n, 2088826863n, 2100928778n ],
    [ 2112738797n, 1975684956n, 2100928778n, 2112738797n ],
    [ 2124492746n, 2018634629n, 2112738797n, 2124492746n ],
    [ 2136593168n, 2061584302n, 2124492746n, 2136593168n ],
    [ 2147483648n, 2104533975n, 2136593168n, 2147483648n ]
  ],
  5: [
    [ 1105675116n, 0n, 867925108n, 1105675116n ],
    [ 1205305831n, 42949673n, 1105675116n, 1205305831n ],
    [ 1274097799n, 85899346n, 1205305831n, 1274097799n ],
    [ 1329643194n, 128849019n, 1274097799n, 1329643194n ],
    [ 1375390613n, 171798692n, 1329643194n, 1375390613n ],
    [ 1415699742n, 214748365n, 1375390613n, 1415699742n ],
    [ 1451891615n, 257698038n, 1415699742n, 1451891615n ],
    [ 1484106003n, 300647711n, 1451891615n, 1484106003n ],
    [ 1514832740n, 343597384n, 1484106003n, 1514832740n ],
    [ 1542900669n, 386547057n, 1514832740n, 1542900669n ],
    [ 1569630505n, 429496730n, 1542900669n, 1569630505n ],
    [ 1594572466n, 472446403n, 1569630505n, 1594572466n ],
    [ 1618511373n, 515396076n, 1594572466n, 1618511373n ],
    [ 1640922272n, 558345748n, 1618511373n, 1640922272n ],
    [ 1661812605n, 601295421n, 1640922272n, 1661812605n ],
    [ 1682199821n, 644245094n, 1661812605n, 1682199821n ],
    [ 1701668901n, 687194767n, 1682199821n, 1701668901n ],
    [ 1720010752n, 730144440n, 1701668901n, 1720010752n ],
    [ 1737826326n, 773094113n, 1720010752n, 1737826326n ],
    [ 1755371147n, 816043786n, 1737826326n, 1755371147n ],
    [ 1772435087n, 858993459n, 1755371147n, 1772435087n ],
    [ 1788625117n, 901943132n, 1772435087n, 1788625117n ],
    [ 1804131977n, 944892805n, 1788625117n, 1804131977n ],
    [ 1819319520n, 987842478n, 1804131977n, 1819319520n ],
    [ 1834672045n, 1030792151n, 1819319520n, 1834672045n ],
    [ 1849180257n, 1073741824n, 1834672045n, 1849180257n ],
    [ 1863709778n, 1116691497n, 1849180257n, 1863709778n ],
    [ 1877804932n, 1159641170n, 1863709778n, 1877804932n ],
    [ 1891570761n, 1202590843n, 1877804932n, 1891570761n ],
    [ 1905247284n, 1245540516n, 1891570761n, 1905247284n ],
    [ 1918696846n, 1288490189n, 1905247284n, 1918696846n ],
    [ 1931650683n, 1331439862n, 1918696846n, 1931650683n ],
    [ 1944591514n, 1374389535n, 1931650683n, 1944591514n ],
    [ 1957249041n, 1417339208n, 1944591514n, 1957249041n ],
    [ 1969877602n, 1460288881n, 1957249041n, 1969877602n ],
    [ 1982365862n, 1503238554n, 1969877602n, 1982365862n ],
    [ 1994764442n, 1546188227n, 1982365862n, 1994764442n ],
    [ 2006999440n, 1589137900n, 1994764442n, 2006999440n ],
    [ 2018959003n, 1632087572n, 2006999440n, 2018959003n ],
    [ 2030866839n, 1675037245n, 2018959003n, 2030866839n ],
    [ 2042934123n, 1717986918n, 2030866839n, 2042934123n ],
    [ 2054778374n, 1760936591n, 2042934123n, 2054778374n ],
    [ 2066392836n, 1803886264n, 2054778374n, 2066392836n ],
    [ 2078259485n, 1846835937n, 2066392836n, 2078259485n ],
    [ 2090069839n, 1889785610n, 2078259485n, 2090069839n ],
    [ 2101615196n, 1932735283n, 2090069839n, 2101615196n ],
    [ 2113103276n, 1975684956n, 2101615196n, 2113103276n ],
    [ 2124412700n, 2018634629n, 2113103276n, 2124412700n ],
    [ 2135904947n, 2061584302n, 2124412700n, 2135904947n ],
    [ 2147483648n, 2104533975n, 2135904947n, 2147483648n ]
  ],
  6: [
    [ 1121713556n, 0n, 882407860n, 1121713556n ],
    [ 1221068782n, 42949673n, 1121713556n, 1221068782n ],
    [ 1289044739n, 85899346n, 1221068782n, 1289044739n ],
    [ 1342005626n, 128849019n, 1289044739n, 1342005626n ],
    [ 1386520666n, 171798692n, 1342005626n, 1386520666n ],
    [ 1426798491n, 214748365n, 1386520666n, 1426798491n ],
    [ 1462726631n, 257698038n, 1426798491n, 1462726631n ],
    [ 1495476397n, 300647711n, 1462726631n, 1495476397n ],
    [ 1525088961n, 343597384n, 1495476397n, 1525088961n ],
    [ 1552371615n, 386547057n, 1525088961n, 1552371615n ],
    [ 1578668867n, 429496730n, 1552371615n, 1578668867n ],
    [ 1603280027n, 472446403n, 1578668867n, 1603280027n ],
    [ 1626509637n, 515396076n, 1603280027n, 1626509637n ],
    [ 1648747689n, 558345748n, 1626509637n, 1648747689n ],
    [ 1669636400n, 601295421n, 1648747689n, 1669636400n ],
    [ 1689671835n, 644245094n, 1669636400n, 1689671835n ],
    [ 1708967431n, 687194767n, 1689671835n, 1708967431n ],
    [ 1727373413n, 730144440n, 1708967431n, 1727373413n ],
    [ 1745121457n, 773094113n, 1727373413n, 1745121457n ],
    [ 1761815223n, 816043786n, 1745121457n, 1761815223n ],
    [ 1778364458n, 858993459n, 1761815223n, 1778364458n ],
    [ 1794562841n, 901943132n, 1778364458n, 1794562841n ],
    [ 1810102265n, 944892805n, 1794562841n, 1810102265n ],
    [ 1824844774n, 987842478n, 1810102265n, 1824844774n ],
    [ 1839440376n, 1030792151n, 1824844774n, 1839440376n ],
    [ 1853792351n, 1073741824n, 1839440376n, 1853792351n ],
    [ 1867868977n, 1116691497n, 1853792351n, 1867868977n ],
    [ 1881748968n, 1159641170n, 1867868977n, 1881748968n ],
    [ 1895132030n, 1202590843n, 1881748968n, 1895132030n ],
    [ 1908571983n, 1245540516n, 1895132030n, 1908571983n ],
    [ 1921655917n, 1288490189n, 1908571983n, 1921655917n ],
    [ 1934504200n, 1331439862n, 1921655917n, 1934504200n ],
    [ 1947402214n, 1374389535n, 1934504200n, 1947402214n ],
    [ 1960268671n, 1417339208n, 1947402214n, 1960268671n ],
    [ 1972576617n, 1460288881n, 1960268671n, 1972576617n ],
    [ 1984628967n, 1503238554n, 1972576617n, 1984628967n ],
    [ 1996915054n, 1546188227n, 1984628967n, 1996915054n ],
    [ 2008832830n, 1589137900n, 1996915054n, 2008832830n ],
    [ 2020586435n, 1632087572n, 2008832830n, 2020586435n ],
    [ 2032309681n, 1675037245n, 2020586435n, 2032309681n ],
    [ 2043890679n, 1717986918n, 2032309681n, 2043890679n ],
    [ 2055676670n, 1760936591n, 2043890679n, 2055676670n ],
    [ 2067237569n, 1803886264n, 2055676670n, 2067237569n ],
    [ 2078853551n, 1846835937n, 2067237569n, 2078853551n ],
    [ 2090297305n, 1889785610n, 2078853551n, 2090297305n ],
    [ 2101478075n, 1932735283n, 2090297305n, 2101478075n ],
    [ 2112702373n, 1975684956n, 2101478075n, 2112702373n ],
    [ 2124091021n, 2018634629n, 2112702373n, 2124091021n ],
    [ 2135575513n, 2061584302n, 2124091021n, 2135575513n ],
    [ 2147483648n, 2104533975n, 2135575513n, 2147483648n ]
  ]
};

export const percentileByOctaves = (noise, octaves) => {
  // If noise is larger than half, invert and add half
  let noiseArg = noise > 0.5 ? 1 - noise : noise;
  let upper = noise > 0.5 ? true : false;

  const raws = SIMPLEX_OCTAVES[octaves].find((b) => BigInt(Math.round(noiseArg * 2 ** 32)) < b[0]);
  const [ limit, whole, low, high ] = raws.map((n) => Number(n) / 2 ** 32);

  if (whole === 0 && noiseArg <= low) noiseArg = low;

  const partial = (noiseArg - low) / (100 * (high - low));
  const percentile = whole + partial;
  return upper ? 1 - percentile : percentile;
};

export default {
  snoise,
  recursiveSNoise,
  percentileByOctaves
};
